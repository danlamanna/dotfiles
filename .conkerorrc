// I think by the time kill_buffer_hook runs the buffer is gone so I
// patch kill_buffer

var kill_buffer_original = kill_buffer_original || kill_buffer;

var killed_buffer_urls = [];

kill_buffer = function (buffer, force) {
    if (buffer.display_uri_string) {
        killed_buffer_urls.push(buffer.display_uri_string);
    }

    kill_buffer_original(buffer,force);
};

interactive("restore-killed-buffer-url", "Loads url from a previously killed buffer",
            function restore_killed_buffer_url (I) {
                if (killed_buffer_urls.length !== 0) {
                    var url = yield I.minibuffer.read(
                        $prompt = "Restore killed url:",
                        $completer = all_word_completer($completions = killed_buffer_urls),
                        $default_completion = killed_buffer_urls[killed_buffer_urls.length - 1],
                        $auto_complete = "url",
                        $auto_complete_initial = true,
                        $auto_complete_delay = 0,
                        $match_required);

                    load_url_in_new_buffer(url);
                } else {
                    I.window.minibuffer.message("No killed buffer urls");
                }
            });


//define_keymap(default_base_keymap, "C-t", "restore-killed-buffer-url");

function disable_scrollbars (buffer) {
    buffer.top_frame.scrollbars.visible = false;
}
//add_hook("create_buffer_late_hook", disable_scrollbars);


session_pref("signon.rememberSignons", true);
session_pref("signon.expireMasterPassword", false);
session_pref("signon.SignonFileName", "signons.txt");
Cc["@mozilla.org/login-manager;1"].getService(Ci.nsILoginManager); // init

session_pref('browser.history_expire_days', 7);

homepage = "http://en.wikipedia.org/wiki/Special:Random";

// auto completion in the minibuffer
minibuffer_auto_complete_default = true;
url_completion_use_history = true; // should work since bf05c87405
url_completion_use_bookmarks = true;

// makes links clicked open in existing conkeror, rather than opening another one
url_remoting_fn = load_url_in_new_buffer;

define_webjump("g", "http://www.google.com/search?q=%s&ie=utf-8&oe=utf-8&aq=t");
define_webjump("d", "https://duckduckgo.com/?q=%s");
define_webjump("w", "https://en.wikipedia.org/wiki/Special:Search?search=%s&go=Go");

define_variable("firebug_url",
    "http://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js");

function firebug (I) {
    var doc = I.buffer.document;
    var script = doc.createElement('script');
    script.setAttribute('type', 'text/javascript');
    script.setAttribute('src', firebug_url);
    script.setAttribute('onload', 'firebug.init();');
    doc.body.appendChild(script);
}
interactive("firebug", "open firebug lite", firebug);

add_hook("before_quit_hook",
         function () {
             var w = get_recent_conkeror_window();
             var result = (w == null) ||
                 "y" == (yield w.minibuffer.read_single_character_option(
                     $prompt = "Quit Conkeror? (y/n)",
                     $options = ["y", "n"]));
             yield co_return(result);
         });

can_kill_last_buffer = false;

mode_line_mode(false);


read_url_handler_list = [read_url_make_default_webjump_handler("d")];

function history_clear () {
    var history = Cc["@mozilla.org/browser/nav-history-service;1"]
        .getService(Ci.nsIBrowserHistory);
    history.removeAllPages();
}
interactive("history-clear",
    "Clear the history.",
    history_clear);

/* tabs! */
require("tab-bar.js");


require("clicks-in-new-buffer.js");
clicks_in_new_buffer_target = OPEN_NEW_BUFFER_BACKGROUND;


//set emacs as external editor
editor_shell_command = "emacsclient -c";
view_source_use_external_editor = true;


interactive("search-clipboard-contents",
            "Search in DuckDuckGo the content of the X clipboard (the selected text)",
            "find-url",
            $browser_object= function(I) {
                return "d "+ read_from_x_primary_selection();
            });

define_key(content_buffer_normal_keymap, "M-y", "search-clipboard-contents");
